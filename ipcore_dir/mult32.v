////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____
//  /   /\/   /
// /___/  \  /    Vendor: Xilinx
// \   \   \/     Version: M.63c
//  \   \         Application: netgen
//  /   /         Filename: mult32.v
// /___/   /\     Timestamp: Tue Feb 11 15:43:36 2014
// \   \  /  \ 
//  \___\/\___\
//             
// Command	: -intstyle ise -w -sim -ofmt verilog ./tmp/_cg\mult32.ngc ./tmp/_cg\mult32.v 
// Device	: 5vlx110tff1136-3
// Input file	: ./tmp/_cg/mult32.ngc
// Output file	: ./tmp/_cg/mult32.v
// # of Modules	: 1
// Design Name	: mult32
// Xilinx        : C:\Xilinx\12.2\ISE_DS\ISE\
//             
// Purpose:    
//     This verilog netlist is a verification model and uses simulation 
//     primitives which may not represent the true implementation of the 
//     device, however the netlist is functionally correct and should not 
//     be modified. This file cannot be synthesized and should only be used 
//     with supported simulation tools.
//             
// Reference:  
//     Command Line Tools User Guide, Chapter 23 and Synthesis and Simulation Design Guide, Chapter 6
//             
////////////////////////////////////////////////////////////////////////////////

`timescale 1 ns/1 ps

module mult32 (
  clk, a, b, p
)/* synthesis syn_black_box syn_noprune=1 */;
  input clk;
  input [31 : 0] a;
  input [31 : 0] b;
  output [31 : 0] p;
  
  // synthesis translate_off
  
  wire \blk00000003/sig000001ce ;
  wire \blk00000003/sig000001cd ;
  wire \blk00000003/sig000001cc ;
  wire \blk00000003/sig000001cb ;
  wire \blk00000003/sig000001ca ;
  wire \blk00000003/sig000001c9 ;
  wire \blk00000003/sig000001c8 ;
  wire \blk00000003/sig000001c7 ;
  wire \blk00000003/sig000001c6 ;
  wire \blk00000003/sig000001c5 ;
  wire \blk00000003/sig000001c4 ;
  wire \blk00000003/sig000001c3 ;
  wire \blk00000003/sig000001c2 ;
  wire \blk00000003/sig000001c1 ;
  wire \blk00000003/sig000001c0 ;
  wire \blk00000003/sig000001bf ;
  wire \blk00000003/sig000001be ;
  wire \blk00000003/sig000001bd ;
  wire \blk00000003/sig000001bc ;
  wire \blk00000003/sig000001bb ;
  wire \blk00000003/sig000001ba ;
  wire \blk00000003/sig000001b9 ;
  wire \blk00000003/sig000001b8 ;
  wire \blk00000003/sig000001b7 ;
  wire \blk00000003/sig000001b6 ;
  wire \blk00000003/sig000001b5 ;
  wire \blk00000003/sig000001b4 ;
  wire \blk00000003/sig000001b3 ;
  wire \blk00000003/sig000001b2 ;
  wire \blk00000003/sig000001b1 ;
  wire \blk00000003/sig000001b0 ;
  wire \blk00000003/sig000001af ;
  wire \blk00000003/sig000001ae ;
  wire \blk00000003/sig000001ad ;
  wire \blk00000003/sig000001ac ;
  wire \blk00000003/sig000001ab ;
  wire \blk00000003/sig000001aa ;
  wire \blk00000003/sig000001a9 ;
  wire \blk00000003/sig000001a8 ;
  wire \blk00000003/sig000001a7 ;
  wire \blk00000003/sig000001a6 ;
  wire \blk00000003/sig000001a5 ;
  wire \blk00000003/sig000001a4 ;
  wire \blk00000003/sig000001a3 ;
  wire \blk00000003/sig000001a2 ;
  wire \blk00000003/sig000001a1 ;
  wire \blk00000003/sig000001a0 ;
  wire \blk00000003/sig0000019f ;
  wire \blk00000003/sig0000019e ;
  wire \blk00000003/sig0000019d ;
  wire \blk00000003/sig0000019c ;
  wire \blk00000003/sig0000019b ;
  wire \blk00000003/sig0000019a ;
  wire \blk00000003/sig00000199 ;
  wire \blk00000003/sig00000198 ;
  wire \blk00000003/sig00000197 ;
  wire \blk00000003/sig00000196 ;
  wire \blk00000003/sig00000195 ;
  wire \blk00000003/sig00000194 ;
  wire \blk00000003/sig00000193 ;
  wire \blk00000003/sig00000192 ;
  wire \blk00000003/sig00000191 ;
  wire \blk00000003/sig00000190 ;
  wire \blk00000003/sig0000018f ;
  wire \blk00000003/sig0000018e ;
  wire \blk00000003/sig0000018d ;
  wire \blk00000003/sig0000018c ;
  wire \blk00000003/sig0000018b ;
  wire \blk00000003/sig0000018a ;
  wire \blk00000003/sig00000189 ;
  wire \blk00000003/sig00000188 ;
  wire \blk00000003/sig00000187 ;
  wire \blk00000003/sig00000186 ;
  wire \blk00000003/sig00000185 ;
  wire \blk00000003/sig00000184 ;
  wire \blk00000003/sig00000183 ;
  wire \blk00000003/sig00000182 ;
  wire \blk00000003/sig00000181 ;
  wire \blk00000003/sig00000180 ;
  wire \blk00000003/sig0000017f ;
  wire \blk00000003/sig0000017e ;
  wire \blk00000003/sig0000017d ;
  wire \blk00000003/sig0000017c ;
  wire \blk00000003/sig0000017b ;
  wire \blk00000003/sig0000017a ;
  wire \blk00000003/sig00000179 ;
  wire \blk00000003/sig00000178 ;
  wire \blk00000003/sig00000177 ;
  wire \blk00000003/sig00000176 ;
  wire \blk00000003/sig00000175 ;
  wire \blk00000003/sig00000174 ;
  wire \blk00000003/sig00000173 ;
  wire \blk00000003/sig00000172 ;
  wire \blk00000003/sig00000171 ;
  wire \blk00000003/sig00000170 ;
  wire \blk00000003/sig0000016f ;
  wire \blk00000003/sig0000016e ;
  wire \blk00000003/sig0000016d ;
  wire \blk00000003/sig0000016c ;
  wire \blk00000003/sig0000016b ;
  wire \blk00000003/sig0000016a ;
  wire \blk00000003/sig00000169 ;
  wire \blk00000003/sig00000168 ;
  wire \blk00000003/sig00000167 ;
  wire \blk00000003/sig00000166 ;
  wire \blk00000003/sig00000165 ;
  wire \blk00000003/sig00000164 ;
  wire \blk00000003/sig00000163 ;
  wire \blk00000003/sig00000162 ;
  wire \blk00000003/sig00000161 ;
  wire \blk00000003/sig00000160 ;
  wire \blk00000003/sig0000015f ;
  wire \blk00000003/sig0000015e ;
  wire \blk00000003/sig0000015d ;
  wire \blk00000003/sig0000015c ;
  wire \blk00000003/sig0000015b ;
  wire \blk00000003/sig0000015a ;
  wire \blk00000003/sig00000159 ;
  wire \blk00000003/sig00000158 ;
  wire \blk00000003/sig00000157 ;
  wire \blk00000003/sig00000156 ;
  wire \blk00000003/sig00000155 ;
  wire \blk00000003/sig00000154 ;
  wire \blk00000003/sig00000153 ;
  wire \blk00000003/sig00000152 ;
  wire \blk00000003/sig00000151 ;
  wire \blk00000003/sig00000150 ;
  wire \blk00000003/sig0000014f ;
  wire \blk00000003/sig0000014e ;
  wire \blk00000003/sig0000014d ;
  wire \blk00000003/sig0000014c ;
  wire \blk00000003/sig0000014b ;
  wire \blk00000003/sig0000014a ;
  wire \blk00000003/sig00000149 ;
  wire \blk00000003/sig00000148 ;
  wire \blk00000003/sig00000147 ;
  wire \blk00000003/sig00000146 ;
  wire \blk00000003/sig00000145 ;
  wire \blk00000003/sig00000144 ;
  wire \blk00000003/sig00000143 ;
  wire \blk00000003/sig00000142 ;
  wire \blk00000003/sig00000141 ;
  wire \blk00000003/sig00000140 ;
  wire \blk00000003/sig0000013f ;
  wire \blk00000003/sig0000013e ;
  wire \blk00000003/sig0000013d ;
  wire \blk00000003/sig0000013c ;
  wire \blk00000003/sig0000013b ;
  wire \blk00000003/sig0000013a ;
  wire \blk00000003/sig00000139 ;
  wire \blk00000003/sig00000138 ;
  wire \blk00000003/sig00000137 ;
  wire \blk00000003/sig00000136 ;
  wire \blk00000003/sig00000135 ;
  wire \blk00000003/sig00000134 ;
  wire \blk00000003/sig00000133 ;
  wire \blk00000003/sig00000132 ;
  wire \blk00000003/sig00000131 ;
  wire \blk00000003/sig00000130 ;
  wire \blk00000003/sig0000012f ;
  wire \blk00000003/sig0000012e ;
  wire \blk00000003/sig0000012d ;
  wire \blk00000003/sig0000012c ;
  wire \blk00000003/sig0000012b ;
  wire \blk00000003/sig0000012a ;
  wire \blk00000003/sig00000129 ;
  wire \blk00000003/sig00000128 ;
  wire \blk00000003/sig00000127 ;
  wire \blk00000003/sig00000126 ;
  wire \blk00000003/sig00000125 ;
  wire \blk00000003/sig00000124 ;
  wire \blk00000003/sig00000123 ;
  wire \blk00000003/sig00000122 ;
  wire \blk00000003/sig00000121 ;
  wire \blk00000003/sig00000120 ;
  wire \blk00000003/sig0000011f ;
  wire \blk00000003/sig0000011e ;
  wire \blk00000003/sig0000011d ;
  wire \blk00000003/sig0000011c ;
  wire \blk00000003/sig0000011b ;
  wire \blk00000003/sig0000011a ;
  wire \blk00000003/sig00000119 ;
  wire \blk00000003/sig00000118 ;
  wire \blk00000003/sig00000117 ;
  wire \blk00000003/sig00000116 ;
  wire \blk00000003/sig00000115 ;
  wire \blk00000003/sig00000114 ;
  wire \blk00000003/sig00000113 ;
  wire \blk00000003/sig00000112 ;
  wire \blk00000003/sig00000111 ;
  wire \blk00000003/sig00000110 ;
  wire \blk00000003/sig0000010f ;
  wire \blk00000003/sig0000010e ;
  wire \blk00000003/sig0000010d ;
  wire \blk00000003/sig0000010c ;
  wire \blk00000003/sig0000010b ;
  wire \blk00000003/sig0000010a ;
  wire \blk00000003/sig00000109 ;
  wire \blk00000003/sig00000108 ;
  wire \blk00000003/sig00000107 ;
  wire \blk00000003/sig00000106 ;
  wire \blk00000003/sig00000105 ;
  wire \blk00000003/sig00000104 ;
  wire \blk00000003/sig00000103 ;
  wire \blk00000003/sig00000102 ;
  wire \blk00000003/sig00000101 ;
  wire \blk00000003/sig00000100 ;
  wire \blk00000003/sig000000ff ;
  wire \blk00000003/sig000000fe ;
  wire \blk00000003/sig000000fd ;
  wire \blk00000003/sig000000fc ;
  wire \blk00000003/sig000000fb ;
  wire \blk00000003/sig000000fa ;
  wire \blk00000003/sig000000f9 ;
  wire \blk00000003/sig000000f8 ;
  wire \blk00000003/sig000000f7 ;
  wire \blk00000003/sig000000f6 ;
  wire \blk00000003/sig000000f5 ;
  wire \blk00000003/sig000000f4 ;
  wire \blk00000003/sig000000f3 ;
  wire \blk00000003/sig000000f2 ;
  wire \blk00000003/sig000000f1 ;
  wire \blk00000003/sig000000f0 ;
  wire \blk00000003/sig000000ef ;
  wire \blk00000003/sig000000ee ;
  wire \blk00000003/sig000000ed ;
  wire \blk00000003/sig000000ec ;
  wire \blk00000003/sig000000eb ;
  wire \blk00000003/sig000000ea ;
  wire \blk00000003/sig000000e9 ;
  wire \blk00000003/sig000000e8 ;
  wire \blk00000003/sig000000e7 ;
  wire \blk00000003/sig000000e6 ;
  wire \blk00000003/sig000000e5 ;
  wire \blk00000003/sig000000e4 ;
  wire \blk00000003/sig000000e3 ;
  wire \blk00000003/sig000000e2 ;
  wire \blk00000003/sig000000e1 ;
  wire \blk00000003/sig000000e0 ;
  wire \blk00000003/sig000000df ;
  wire \blk00000003/sig000000de ;
  wire \blk00000003/sig000000dd ;
  wire \blk00000003/sig000000dc ;
  wire \blk00000003/sig000000db ;
  wire \blk00000003/sig000000da ;
  wire \blk00000003/sig000000d9 ;
  wire \blk00000003/sig000000d8 ;
  wire \blk00000003/sig000000d7 ;
  wire \blk00000003/sig000000d6 ;
  wire \blk00000003/sig000000d5 ;
  wire \blk00000003/sig000000d4 ;
  wire \blk00000003/sig000000d3 ;
  wire \blk00000003/sig000000d2 ;
  wire \blk00000003/sig000000d1 ;
  wire \blk00000003/sig000000d0 ;
  wire \blk00000003/sig000000cf ;
  wire \blk00000003/sig000000ce ;
  wire \blk00000003/sig000000cd ;
  wire \blk00000003/sig000000cc ;
  wire \blk00000003/sig000000cb ;
  wire \blk00000003/sig000000ca ;
  wire \blk00000003/sig000000c9 ;
  wire \blk00000003/sig000000c8 ;
  wire \blk00000003/sig000000c7 ;
  wire \blk00000003/sig000000c6 ;
  wire \blk00000003/sig000000c5 ;
  wire \blk00000003/sig000000c4 ;
  wire \blk00000003/sig000000c3 ;
  wire \blk00000003/sig000000c2 ;
  wire \blk00000003/sig000000c1 ;
  wire \blk00000003/sig000000c0 ;
  wire \blk00000003/sig000000bf ;
  wire \blk00000003/sig000000be ;
  wire \blk00000003/sig000000bd ;
  wire \blk00000003/sig000000bc ;
  wire \blk00000003/sig000000bb ;
  wire \blk00000003/sig000000ba ;
  wire \blk00000003/sig000000b9 ;
  wire \blk00000003/sig000000b8 ;
  wire \blk00000003/sig000000b7 ;
  wire \blk00000003/sig000000b6 ;
  wire \blk00000003/sig000000b5 ;
  wire \blk00000003/sig000000b4 ;
  wire \blk00000003/sig000000b3 ;
  wire \blk00000003/sig000000b2 ;
  wire \blk00000003/sig000000b1 ;
  wire \blk00000003/sig000000b0 ;
  wire \blk00000003/sig000000af ;
  wire \blk00000003/sig000000ae ;
  wire \blk00000003/sig000000ad ;
  wire \blk00000003/sig000000ac ;
  wire \blk00000003/sig000000ab ;
  wire \blk00000003/sig000000aa ;
  wire \blk00000003/sig000000a9 ;
  wire \blk00000003/sig000000a8 ;
  wire \blk00000003/sig000000a7 ;
  wire \blk00000003/sig000000a6 ;
  wire \blk00000003/sig000000a5 ;
  wire \blk00000003/sig000000a4 ;
  wire \blk00000003/sig000000a3 ;
  wire \blk00000003/sig000000a2 ;
  wire \blk00000003/sig000000a1 ;
  wire \blk00000003/sig000000a0 ;
  wire \blk00000003/sig0000009f ;
  wire \blk00000003/sig0000009e ;
  wire \blk00000003/sig0000009d ;
  wire \blk00000003/sig0000009c ;
  wire \blk00000003/sig0000009b ;
  wire \blk00000003/sig0000009a ;
  wire \blk00000003/sig00000099 ;
  wire \blk00000003/sig00000098 ;
  wire \blk00000003/sig00000097 ;
  wire \blk00000003/sig00000096 ;
  wire \blk00000003/sig00000095 ;
  wire \blk00000003/sig00000094 ;
  wire \blk00000003/sig00000093 ;
  wire \blk00000003/sig00000052 ;
  wire \blk00000003/sig00000031 ;
  wire \blk00000003/sig00000030 ;
  wire \blk00000003/sig0000002f ;
  wire \blk00000003/sig0000002e ;
  wire \blk00000003/sig0000002d ;
  wire \blk00000003/sig0000002c ;
  wire \blk00000003/sig0000002b ;
  wire \blk00000003/sig0000002a ;
  wire \blk00000003/sig00000029 ;
  wire \blk00000003/sig00000028 ;
  wire \blk00000003/sig00000027 ;
  wire \blk00000003/sig00000026 ;
  wire \blk00000003/sig00000025 ;
  wire \blk00000003/sig00000024 ;
  wire \blk00000003/sig00000023 ;
  wire \blk00000003/sig00000022 ;
  wire \blk00000003/sig00000021 ;
  wire \blk00000003/sig00000020 ;
  wire \blk00000003/sig0000001f ;
  wire \blk00000003/sig0000001e ;
  wire \blk00000003/sig0000001d ;
  wire \blk00000003/sig0000001c ;
  wire \blk00000003/sig0000001b ;
  wire \blk00000003/sig0000001a ;
  wire \blk00000003/sig00000019 ;
  wire \blk00000003/sig00000018 ;
  wire \blk00000003/sig00000017 ;
  wire \blk00000003/sig00000016 ;
  wire \blk00000003/sig00000015 ;
  wire \blk00000003/sig00000014 ;
  wire \blk00000003/sig00000013 ;
  wire \blk00000003/sig00000012 ;
  wire \blk00000003/sig00000011 ;
  wire \blk00000003/sig00000010 ;
  wire \blk00000003/sig0000000f ;
  wire \blk00000003/sig0000000e ;
  wire \blk00000003/sig0000000d ;
  wire \blk00000003/sig0000000c ;
  wire \blk00000003/sig0000000b ;
  wire \blk00000003/sig0000000a ;
  wire \blk00000003/sig00000009 ;
  wire \blk00000003/sig00000008 ;
  wire \blk00000003/sig00000007 ;
  wire \blk00000003/sig00000006 ;
  wire \blk00000003/sig00000005 ;
  wire \blk00000003/sig00000004 ;
  wire \blk00000003/sig00000003 ;
  wire \blk00000003/sig00000002 ;
  wire NLW_blk00000001_P_UNCONNECTED;
  wire NLW_blk00000002_G_UNCONNECTED;
  wire \NLW_blk00000003/blk00000077_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000075_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000073_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000071_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000006f_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000006d_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000006b_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000069_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000067_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000065_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000063_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000061_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000005f_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000005d_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000005b_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000059_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000057_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000055_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000053_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000051_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000004f_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000004d_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000004b_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000049_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000047_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000045_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000043_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000041_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000003f_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000003d_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk0000003b_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000039_Q15_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_PATTERNBDETECT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_PATTERNDETECT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_OVERFLOW_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_UNDERFLOW_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_CARRYCASCOUT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_MULTSIGNOUT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<47>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<46>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<45>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<44>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<43>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<42>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<41>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<40>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<39>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<38>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<37>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<36>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<35>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<34>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<33>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<32>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<31>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<30>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<29>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<28>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<27>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<26>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<25>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<24>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<23>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<22>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<21>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<20>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<19>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<18>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_P<17>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_BCOUT<17>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_BCOUT<16>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_BCOUT<15>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_BCOUT<14>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_BCOUT<13>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_BCOUT<12>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_BCOUT<11>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_BCOUT<10>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_BCOUT<9>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_BCOUT<8>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_BCOUT<7>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_BCOUT<6>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_BCOUT<5>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_BCOUT<4>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_BCOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_BCOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_BCOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_BCOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_CARRYOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_CARRYOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_CARRYOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000038_CARRYOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_PATTERNBDETECT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_PATTERNDETECT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_OVERFLOW_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_UNDERFLOW_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_CARRYCASCOUT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_MULTSIGNOUT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<47>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<46>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<45>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<44>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<43>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<42>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<41>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<40>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<39>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<38>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<37>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<36>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<35>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<34>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<33>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<32>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<31>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<30>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<29>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<28>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<27>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<26>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<25>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<24>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<23>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<22>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<21>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<20>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<19>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<18>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<17>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<16>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<15>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<14>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<13>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<12>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<11>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<10>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<9>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<8>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<7>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<6>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<5>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<4>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_P<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_BCOUT<17>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_BCOUT<16>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_BCOUT<15>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_BCOUT<14>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_BCOUT<13>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_BCOUT<12>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_BCOUT<11>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_BCOUT<10>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_BCOUT<9>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_BCOUT<8>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_BCOUT<7>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_BCOUT<6>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_BCOUT<5>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_BCOUT<4>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_BCOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_BCOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_BCOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_BCOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<29>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<28>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<27>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<26>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<25>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<24>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<23>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<22>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<21>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<20>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<19>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<18>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<17>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<16>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<15>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<14>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<13>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<12>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<11>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<10>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<9>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<8>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<7>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<6>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<5>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<4>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_ACOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_CARRYOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_CARRYOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_CARRYOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000037_CARRYOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_PATTERNBDETECT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_PATTERNDETECT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_OVERFLOW_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_UNDERFLOW_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_CARRYCASCOUT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_MULTSIGNOUT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<47>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<46>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<45>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<44>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<43>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<42>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<41>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<40>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<39>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<38>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<37>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<36>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<35>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<34>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<33>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<32>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<31>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<30>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<29>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<28>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<27>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<26>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<25>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<24>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<23>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<22>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<21>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<20>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<19>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<18>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<17>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<16>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_P<15>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_BCOUT<17>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_BCOUT<16>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_BCOUT<15>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_BCOUT<14>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_BCOUT<13>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_BCOUT<12>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_BCOUT<11>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_BCOUT<10>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_BCOUT<9>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_BCOUT<8>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_BCOUT<7>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_BCOUT<6>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_BCOUT<5>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_BCOUT<4>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_BCOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_BCOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_BCOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_BCOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_CARRYOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_CARRYOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_CARRYOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000036_CARRYOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_PATTERNBDETECT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_PATTERNDETECT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_OVERFLOW_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_UNDERFLOW_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_CARRYCASCOUT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_MULTSIGNOUT_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<47>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<46>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<45>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<44>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<43>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<42>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<41>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<40>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<39>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<38>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<37>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<36>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<35>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<34>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<33>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<32>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<31>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<30>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<29>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<28>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<27>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<26>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<25>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<24>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<23>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<22>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<21>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<20>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<19>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<18>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<17>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<16>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<15>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<14>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<13>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<12>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<11>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<10>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<9>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<8>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<7>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<6>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<5>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<4>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_P<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_BCOUT<17>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_BCOUT<16>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_BCOUT<15>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_BCOUT<14>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_BCOUT<13>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_BCOUT<12>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_BCOUT<11>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_BCOUT<10>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_BCOUT<9>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_BCOUT<8>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_BCOUT<7>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_BCOUT<6>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_BCOUT<5>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_BCOUT<4>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_BCOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_BCOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_BCOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_BCOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<29>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<28>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<27>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<26>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<25>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<24>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<23>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<22>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<21>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<20>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<19>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<18>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<17>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<16>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<15>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<14>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<13>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<12>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<11>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<10>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<9>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<8>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<7>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<6>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<5>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<4>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_ACOUT<0>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_CARRYOUT<3>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_CARRYOUT<2>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_CARRYOUT<1>_UNCONNECTED ;
  wire \NLW_blk00000003/blk00000035_CARRYOUT<0>_UNCONNECTED ;
  wire [31 : 0] a_0;
  wire [31 : 0] b_1;
  wire [31 : 0] p_2;
  assign
    a_0[31] = a[31],
    a_0[30] = a[30],
    a_0[29] = a[29],
    a_0[28] = a[28],
    a_0[27] = a[27],
    a_0[26] = a[26],
    a_0[25] = a[25],
    a_0[24] = a[24],
    a_0[23] = a[23],
    a_0[22] = a[22],
    a_0[21] = a[21],
    a_0[20] = a[20],
    a_0[19] = a[19],
    a_0[18] = a[18],
    a_0[17] = a[17],
    a_0[16] = a[16],
    a_0[15] = a[15],
    a_0[14] = a[14],
    a_0[13] = a[13],
    a_0[12] = a[12],
    a_0[11] = a[11],
    a_0[10] = a[10],
    a_0[9] = a[9],
    a_0[8] = a[8],
    a_0[7] = a[7],
    a_0[6] = a[6],
    a_0[5] = a[5],
    a_0[4] = a[4],
    a_0[3] = a[3],
    a_0[2] = a[2],
    a_0[1] = a[1],
    a_0[0] = a[0],
    b_1[31] = b[31],
    b_1[30] = b[30],
    b_1[29] = b[29],
    b_1[28] = b[28],
    b_1[27] = b[27],
    b_1[26] = b[26],
    b_1[25] = b[25],
    b_1[24] = b[24],
    b_1[23] = b[23],
    b_1[22] = b[22],
    b_1[21] = b[21],
    b_1[20] = b[20],
    b_1[19] = b[19],
    b_1[18] = b[18],
    b_1[17] = b[17],
    b_1[16] = b[16],
    b_1[15] = b[15],
    b_1[14] = b[14],
    b_1[13] = b[13],
    b_1[12] = b[12],
    b_1[11] = b[11],
    b_1[10] = b[10],
    b_1[9] = b[9],
    b_1[8] = b[8],
    b_1[7] = b[7],
    b_1[6] = b[6],
    b_1[5] = b[5],
    b_1[4] = b[4],
    b_1[3] = b[3],
    b_1[2] = b[2],
    b_1[1] = b[1],
    b_1[0] = b[0],
    p[31] = p_2[31],
    p[30] = p_2[30],
    p[29] = p_2[29],
    p[28] = p_2[28],
    p[27] = p_2[27],
    p[26] = p_2[26],
    p[25] = p_2[25],
    p[24] = p_2[24],
    p[23] = p_2[23],
    p[22] = p_2[22],
    p[21] = p_2[21],
    p[20] = p_2[20],
    p[19] = p_2[19],
    p[18] = p_2[18],
    p[17] = p_2[17],
    p[16] = p_2[16],
    p[15] = p_2[15],
    p[14] = p_2[14],
    p[13] = p_2[13],
    p[12] = p_2[12],
    p[11] = p_2[11],
    p[10] = p_2[10],
    p[9] = p_2[9],
    p[8] = p_2[8],
    p[7] = p_2[7],
    p[6] = p_2[6],
    p[5] = p_2[5],
    p[4] = p_2[4],
    p[3] = p_2[3],
    p[2] = p_2[2],
    p[1] = p_2[1],
    p[0] = p_2[0];
  VCC   blk00000001 (
    .P(NLW_blk00000001_P_UNCONNECTED)
  );
  GND   blk00000002 (
    .G(NLW_blk00000002_G_UNCONNECTED)
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000078  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001ce ),
    .Q(\blk00000003/sig000000f3 )
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk00000077  (
    .A0(\blk00000003/sig00000052 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(b_1[31]),
    .Q(\blk00000003/sig000001ce ),
    .Q15(\NLW_blk00000003/blk00000077_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000076  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001cd ),
    .Q(\blk00000003/sig000000f4 )
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk00000075  (
    .A0(\blk00000003/sig00000052 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(b_1[30]),
    .Q(\blk00000003/sig000001cd ),
    .Q15(\NLW_blk00000003/blk00000075_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000074  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001cc ),
    .Q(\blk00000003/sig000000f5 )
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk00000073  (
    .A0(\blk00000003/sig00000052 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(b_1[29]),
    .Q(\blk00000003/sig000001cc ),
    .Q15(\NLW_blk00000003/blk00000073_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000072  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001cb ),
    .Q(\blk00000003/sig000000f6 )
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk00000071  (
    .A0(\blk00000003/sig00000052 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(b_1[28]),
    .Q(\blk00000003/sig000001cb ),
    .Q15(\NLW_blk00000003/blk00000071_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000070  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001ca ),
    .Q(\blk00000003/sig000000f7 )
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk0000006f  (
    .A0(\blk00000003/sig00000052 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(b_1[27]),
    .Q(\blk00000003/sig000001ca ),
    .Q15(\NLW_blk00000003/blk0000006f_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000006e  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001c9 ),
    .Q(\blk00000003/sig000000f8 )
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk0000006d  (
    .A0(\blk00000003/sig00000052 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(b_1[26]),
    .Q(\blk00000003/sig000001c9 ),
    .Q15(\NLW_blk00000003/blk0000006d_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000006c  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001c8 ),
    .Q(\blk00000003/sig000000f9 )
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk0000006b  (
    .A0(\blk00000003/sig00000052 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(b_1[25]),
    .Q(\blk00000003/sig000001c8 ),
    .Q15(\NLW_blk00000003/blk0000006b_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000006a  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001c7 ),
    .Q(\blk00000003/sig000000fa )
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk00000069  (
    .A0(\blk00000003/sig00000052 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(b_1[24]),
    .Q(\blk00000003/sig000001c7 ),
    .Q15(\NLW_blk00000003/blk00000069_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000068  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001c6 ),
    .Q(\blk00000003/sig000000fb )
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk00000067  (
    .A0(\blk00000003/sig00000052 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(b_1[23]),
    .Q(\blk00000003/sig000001c6 ),
    .Q15(\NLW_blk00000003/blk00000067_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000066  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001c5 ),
    .Q(\blk00000003/sig000000fc )
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk00000065  (
    .A0(\blk00000003/sig00000052 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(b_1[22]),
    .Q(\blk00000003/sig000001c5 ),
    .Q15(\NLW_blk00000003/blk00000065_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000064  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001c4 ),
    .Q(\blk00000003/sig000000fd )
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk00000063  (
    .A0(\blk00000003/sig00000052 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(b_1[21]),
    .Q(\blk00000003/sig000001c4 ),
    .Q15(\NLW_blk00000003/blk00000063_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000062  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001c3 ),
    .Q(\blk00000003/sig000000fe )
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk00000061  (
    .A0(\blk00000003/sig00000052 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(b_1[20]),
    .Q(\blk00000003/sig000001c3 ),
    .Q15(\NLW_blk00000003/blk00000061_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000060  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001c2 ),
    .Q(\blk00000003/sig000000ff )
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk0000005f  (
    .A0(\blk00000003/sig00000052 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(b_1[19]),
    .Q(\blk00000003/sig000001c2 ),
    .Q15(\NLW_blk00000003/blk0000005f_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000005e  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001c1 ),
    .Q(\blk00000003/sig00000100 )
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk0000005d  (
    .A0(\blk00000003/sig00000052 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(b_1[18]),
    .Q(\blk00000003/sig000001c1 ),
    .Q15(\NLW_blk00000003/blk0000005d_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000005c  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001c0 ),
    .Q(\blk00000003/sig00000101 )
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk0000005b  (
    .A0(\blk00000003/sig00000052 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(b_1[17]),
    .Q(\blk00000003/sig000001c0 ),
    .Q15(\NLW_blk00000003/blk0000005b_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000005a  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001bf ),
    .Q(p_2[16])
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk00000059  (
    .A0(\blk00000003/sig00000093 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(\blk00000003/sig0000019e ),
    .Q(\blk00000003/sig000001bf ),
    .Q15(\NLW_blk00000003/blk00000059_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000058  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001be ),
    .Q(p_2[15])
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk00000057  (
    .A0(\blk00000003/sig00000093 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(\blk00000003/sig0000019f ),
    .Q(\blk00000003/sig000001be ),
    .Q15(\NLW_blk00000003/blk00000057_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000056  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001bd ),
    .Q(p_2[14])
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk00000055  (
    .A0(\blk00000003/sig00000093 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(\blk00000003/sig000001a0 ),
    .Q(\blk00000003/sig000001bd ),
    .Q15(\NLW_blk00000003/blk00000055_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000054  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001bc ),
    .Q(p_2[13])
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk00000053  (
    .A0(\blk00000003/sig00000093 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(\blk00000003/sig000001a1 ),
    .Q(\blk00000003/sig000001bc ),
    .Q15(\NLW_blk00000003/blk00000053_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000052  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001bb ),
    .Q(p_2[12])
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk00000051  (
    .A0(\blk00000003/sig00000093 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(\blk00000003/sig000001a2 ),
    .Q(\blk00000003/sig000001bb ),
    .Q15(\NLW_blk00000003/blk00000051_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000050  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001ba ),
    .Q(p_2[11])
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk0000004f  (
    .A0(\blk00000003/sig00000093 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(\blk00000003/sig000001a3 ),
    .Q(\blk00000003/sig000001ba ),
    .Q15(\NLW_blk00000003/blk0000004f_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000004e  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001b9 ),
    .Q(p_2[10])
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk0000004d  (
    .A0(\blk00000003/sig00000093 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(\blk00000003/sig000001a4 ),
    .Q(\blk00000003/sig000001b9 ),
    .Q15(\NLW_blk00000003/blk0000004d_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000004c  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001b8 ),
    .Q(p_2[9])
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk0000004b  (
    .A0(\blk00000003/sig00000093 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(\blk00000003/sig000001a5 ),
    .Q(\blk00000003/sig000001b8 ),
    .Q15(\NLW_blk00000003/blk0000004b_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000004a  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001b7 ),
    .Q(p_2[8])
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk00000049  (
    .A0(\blk00000003/sig00000093 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(\blk00000003/sig000001a6 ),
    .Q(\blk00000003/sig000001b7 ),
    .Q15(\NLW_blk00000003/blk00000049_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000048  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001b6 ),
    .Q(p_2[7])
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk00000047  (
    .A0(\blk00000003/sig00000093 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(\blk00000003/sig000001a7 ),
    .Q(\blk00000003/sig000001b6 ),
    .Q15(\NLW_blk00000003/blk00000047_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000046  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001b5 ),
    .Q(p_2[6])
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk00000045  (
    .A0(\blk00000003/sig00000093 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(\blk00000003/sig000001a8 ),
    .Q(\blk00000003/sig000001b5 ),
    .Q15(\NLW_blk00000003/blk00000045_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000044  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001b4 ),
    .Q(p_2[5])
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk00000043  (
    .A0(\blk00000003/sig00000093 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(\blk00000003/sig000001a9 ),
    .Q(\blk00000003/sig000001b4 ),
    .Q15(\NLW_blk00000003/blk00000043_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000042  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001b3 ),
    .Q(p_2[4])
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk00000041  (
    .A0(\blk00000003/sig00000093 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(\blk00000003/sig000001aa ),
    .Q(\blk00000003/sig000001b3 ),
    .Q15(\NLW_blk00000003/blk00000041_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000040  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001b2 ),
    .Q(p_2[3])
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk0000003f  (
    .A0(\blk00000003/sig00000093 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(\blk00000003/sig000001ab ),
    .Q(\blk00000003/sig000001b2 ),
    .Q15(\NLW_blk00000003/blk0000003f_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000003e  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001b1 ),
    .Q(p_2[2])
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk0000003d  (
    .A0(\blk00000003/sig00000093 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(\blk00000003/sig000001ac ),
    .Q(\blk00000003/sig000001b1 ),
    .Q15(\NLW_blk00000003/blk0000003d_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000003c  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001b0 ),
    .Q(p_2[1])
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk0000003b  (
    .A0(\blk00000003/sig00000093 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(\blk00000003/sig000001ad ),
    .Q(\blk00000003/sig000001b0 ),
    .Q15(\NLW_blk00000003/blk0000003b_Q15_UNCONNECTED )
  );
  FDE #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000003a  (
    .C(clk),
    .CE(\blk00000003/sig00000093 ),
    .D(\blk00000003/sig000001af ),
    .Q(p_2[0])
  );
  SRLC16E #(
    .INIT ( 16'h0000 ))
  \blk00000003/blk00000039  (
    .A0(\blk00000003/sig00000093 ),
    .A1(\blk00000003/sig00000052 ),
    .A2(\blk00000003/sig00000052 ),
    .A3(\blk00000003/sig00000052 ),
    .CE(\blk00000003/sig00000093 ),
    .CLK(clk),
    .D(\blk00000003/sig000001ae ),
    .Q(\blk00000003/sig000001af ),
    .Q15(\NLW_blk00000003/blk00000039_Q15_UNCONNECTED )
  );
  DSP48E #(
    .ACASCREG ( 1 ),
    .ALUMODEREG ( 0 ),
    .AREG ( 1 ),
    .AUTORESET_PATTERN_DETECT ( "FALSE" ),
    .AUTORESET_PATTERN_DETECT_OPTINV ( "MATCH" ),
    .A_INPUT ( "DIRECT" ),
    .BCASCREG ( 1 ),
    .BREG ( 1 ),
    .B_INPUT ( "DIRECT" ),
    .CARRYINREG ( 0 ),
    .CARRYINSELREG ( 0 ),
    .CREG ( 0 ),
    .PATTERN ( 48'h000000000000 ),
    .MREG ( 1 ),
    .MULTCARRYINREG ( 0 ),
    .OPMODEREG ( 0 ),
    .PREG ( 1 ),
    .SEL_MASK ( "MASK" ),
    .SEL_PATTERN ( "PATTERN" ),
    .SEL_ROUNDING_MASK ( "SEL_MASK" ),
    .SIM_MODE ( "SAFE" ),
    .USE_MULT ( "MULT_S" ),
    .USE_PATTERN_DETECT ( "NO_PATDET" ),
    .USE_SIMD ( "ONE48" ),
    .MASK ( 48'h000000000000 ))
  \blk00000003/blk00000038  (
    .CARRYIN(\blk00000003/sig00000052 ),
    .CEA1(\blk00000003/sig00000052 ),
    .CEA2(\blk00000003/sig00000093 ),
    .CEB1(\blk00000003/sig00000052 ),
    .CEB2(\blk00000003/sig00000093 ),
    .CEC(\blk00000003/sig00000052 ),
    .CECTRL(\blk00000003/sig00000052 ),
    .CEP(\blk00000003/sig00000093 ),
    .CEM(\blk00000003/sig00000093 ),
    .CECARRYIN(\blk00000003/sig00000052 ),
    .CEMULTCARRYIN(\blk00000003/sig00000052 ),
    .CLK(clk),
    .RSTA(\blk00000003/sig00000052 ),
    .RSTB(\blk00000003/sig00000052 ),
    .RSTC(\blk00000003/sig00000052 ),
    .RSTCTRL(\blk00000003/sig00000052 ),
    .RSTP(\blk00000003/sig00000052 ),
    .RSTM(\blk00000003/sig00000052 ),
    .RSTALLCARRYIN(\blk00000003/sig00000052 ),
    .CEALUMODE(\blk00000003/sig00000052 ),
    .RSTALUMODE(\blk00000003/sig00000052 ),
    .PATTERNBDETECT(\NLW_blk00000003/blk00000038_PATTERNBDETECT_UNCONNECTED ),
    .PATTERNDETECT(\NLW_blk00000003/blk00000038_PATTERNDETECT_UNCONNECTED ),
    .OVERFLOW(\NLW_blk00000003/blk00000038_OVERFLOW_UNCONNECTED ),
    .UNDERFLOW(\NLW_blk00000003/blk00000038_UNDERFLOW_UNCONNECTED ),
    .CARRYCASCIN(\blk00000003/sig00000052 ),
    .CARRYCASCOUT(\NLW_blk00000003/blk00000038_CARRYCASCOUT_UNCONNECTED ),
    .MULTSIGNIN(\blk00000003/sig00000052 ),
    .MULTSIGNOUT(\NLW_blk00000003/blk00000038_MULTSIGNOUT_UNCONNECTED ),
    .A({\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , a_0[16], a_0[15], a_0[14], a_0[13], a_0[12], a_0[11], a_0[10], a_0[9]
, a_0[8], a_0[7], a_0[6], a_0[5], a_0[4], a_0[3], a_0[2], a_0[1], a_0[0]}),
    .PCIN({\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 }),
    .B({\blk00000003/sig00000052 , b_1[16], b_1[15], b_1[14], b_1[13], b_1[12], b_1[11], b_1[10], b_1[9], b_1[8], b_1[7], b_1[6], b_1[5], b_1[4], 
b_1[3], b_1[2], b_1[1], b_1[0]}),
    .C({\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 }),
    .CARRYINSEL({\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 }),
    .OPMODE({\blk00000003/sig00000052 , \blk00000003/sig00000093 , \blk00000003/sig00000093 , \blk00000003/sig00000052 , \blk00000003/sig00000093 , 
\blk00000003/sig00000052 , \blk00000003/sig00000093 }),
    .BCIN({\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 }),
    .ALUMODE({\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 }),
    .PCOUT({\blk00000003/sig00000150 , \blk00000003/sig00000151 , \blk00000003/sig00000152 , \blk00000003/sig00000153 , \blk00000003/sig00000154 , 
\blk00000003/sig00000155 , \blk00000003/sig00000156 , \blk00000003/sig00000157 , \blk00000003/sig00000158 , \blk00000003/sig00000159 , 
\blk00000003/sig0000015a , \blk00000003/sig0000015b , \blk00000003/sig0000015c , \blk00000003/sig0000015d , \blk00000003/sig0000015e , 
\blk00000003/sig0000015f , \blk00000003/sig00000160 , \blk00000003/sig00000161 , \blk00000003/sig00000162 , \blk00000003/sig00000163 , 
\blk00000003/sig00000164 , \blk00000003/sig00000165 , \blk00000003/sig00000166 , \blk00000003/sig00000167 , \blk00000003/sig00000168 , 
\blk00000003/sig00000169 , \blk00000003/sig0000016a , \blk00000003/sig0000016b , \blk00000003/sig0000016c , \blk00000003/sig0000016d , 
\blk00000003/sig0000016e , \blk00000003/sig0000016f , \blk00000003/sig00000170 , \blk00000003/sig00000171 , \blk00000003/sig00000172 , 
\blk00000003/sig00000173 , \blk00000003/sig00000174 , \blk00000003/sig00000175 , \blk00000003/sig00000176 , \blk00000003/sig00000177 , 
\blk00000003/sig00000178 , \blk00000003/sig00000179 , \blk00000003/sig0000017a , \blk00000003/sig0000017b , \blk00000003/sig0000017c , 
\blk00000003/sig0000017d , \blk00000003/sig0000017e , \blk00000003/sig0000017f }),
    .P({\NLW_blk00000003/blk00000038_P<47>_UNCONNECTED , \NLW_blk00000003/blk00000038_P<46>_UNCONNECTED , 
\NLW_blk00000003/blk00000038_P<45>_UNCONNECTED , \NLW_blk00000003/blk00000038_P<44>_UNCONNECTED , \NLW_blk00000003/blk00000038_P<43>_UNCONNECTED , 
\NLW_blk00000003/blk00000038_P<42>_UNCONNECTED , \NLW_blk00000003/blk00000038_P<41>_UNCONNECTED , \NLW_blk00000003/blk00000038_P<40>_UNCONNECTED , 
\NLW_blk00000003/blk00000038_P<39>_UNCONNECTED , \NLW_blk00000003/blk00000038_P<38>_UNCONNECTED , \NLW_blk00000003/blk00000038_P<37>_UNCONNECTED , 
\NLW_blk00000003/blk00000038_P<36>_UNCONNECTED , \NLW_blk00000003/blk00000038_P<35>_UNCONNECTED , \NLW_blk00000003/blk00000038_P<34>_UNCONNECTED , 
\NLW_blk00000003/blk00000038_P<33>_UNCONNECTED , \NLW_blk00000003/blk00000038_P<32>_UNCONNECTED , \NLW_blk00000003/blk00000038_P<31>_UNCONNECTED , 
\NLW_blk00000003/blk00000038_P<30>_UNCONNECTED , \NLW_blk00000003/blk00000038_P<29>_UNCONNECTED , \NLW_blk00000003/blk00000038_P<28>_UNCONNECTED , 
\NLW_blk00000003/blk00000038_P<27>_UNCONNECTED , \NLW_blk00000003/blk00000038_P<26>_UNCONNECTED , \NLW_blk00000003/blk00000038_P<25>_UNCONNECTED , 
\NLW_blk00000003/blk00000038_P<24>_UNCONNECTED , \NLW_blk00000003/blk00000038_P<23>_UNCONNECTED , \NLW_blk00000003/blk00000038_P<22>_UNCONNECTED , 
\NLW_blk00000003/blk00000038_P<21>_UNCONNECTED , \NLW_blk00000003/blk00000038_P<20>_UNCONNECTED , \NLW_blk00000003/blk00000038_P<19>_UNCONNECTED , 
\NLW_blk00000003/blk00000038_P<18>_UNCONNECTED , \NLW_blk00000003/blk00000038_P<17>_UNCONNECTED , \blk00000003/sig0000019e , \blk00000003/sig0000019f 
, \blk00000003/sig000001a0 , \blk00000003/sig000001a1 , \blk00000003/sig000001a2 , \blk00000003/sig000001a3 , \blk00000003/sig000001a4 , 
\blk00000003/sig000001a5 , \blk00000003/sig000001a6 , \blk00000003/sig000001a7 , \blk00000003/sig000001a8 , \blk00000003/sig000001a9 , 
\blk00000003/sig000001aa , \blk00000003/sig000001ab , \blk00000003/sig000001ac , \blk00000003/sig000001ad , \blk00000003/sig000001ae }),
    .BCOUT({\NLW_blk00000003/blk00000038_BCOUT<17>_UNCONNECTED , \NLW_blk00000003/blk00000038_BCOUT<16>_UNCONNECTED , 
\NLW_blk00000003/blk00000038_BCOUT<15>_UNCONNECTED , \NLW_blk00000003/blk00000038_BCOUT<14>_UNCONNECTED , 
\NLW_blk00000003/blk00000038_BCOUT<13>_UNCONNECTED , \NLW_blk00000003/blk00000038_BCOUT<12>_UNCONNECTED , 
\NLW_blk00000003/blk00000038_BCOUT<11>_UNCONNECTED , \NLW_blk00000003/blk00000038_BCOUT<10>_UNCONNECTED , 
\NLW_blk00000003/blk00000038_BCOUT<9>_UNCONNECTED , \NLW_blk00000003/blk00000038_BCOUT<8>_UNCONNECTED , 
\NLW_blk00000003/blk00000038_BCOUT<7>_UNCONNECTED , \NLW_blk00000003/blk00000038_BCOUT<6>_UNCONNECTED , 
\NLW_blk00000003/blk00000038_BCOUT<5>_UNCONNECTED , \NLW_blk00000003/blk00000038_BCOUT<4>_UNCONNECTED , 
\NLW_blk00000003/blk00000038_BCOUT<3>_UNCONNECTED , \NLW_blk00000003/blk00000038_BCOUT<2>_UNCONNECTED , 
\NLW_blk00000003/blk00000038_BCOUT<1>_UNCONNECTED , \NLW_blk00000003/blk00000038_BCOUT<0>_UNCONNECTED }),
    .ACIN({\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 }),
    .ACOUT({\blk00000003/sig00000180 , \blk00000003/sig00000181 , \blk00000003/sig00000182 , \blk00000003/sig00000183 , \blk00000003/sig00000184 , 
\blk00000003/sig00000185 , \blk00000003/sig00000186 , \blk00000003/sig00000187 , \blk00000003/sig00000188 , \blk00000003/sig00000189 , 
\blk00000003/sig0000018a , \blk00000003/sig0000018b , \blk00000003/sig0000018c , \blk00000003/sig0000018d , \blk00000003/sig0000018e , 
\blk00000003/sig0000018f , \blk00000003/sig00000190 , \blk00000003/sig00000191 , \blk00000003/sig00000192 , \blk00000003/sig00000193 , 
\blk00000003/sig00000194 , \blk00000003/sig00000195 , \blk00000003/sig00000196 , \blk00000003/sig00000197 , \blk00000003/sig00000198 , 
\blk00000003/sig00000199 , \blk00000003/sig0000019a , \blk00000003/sig0000019b , \blk00000003/sig0000019c , \blk00000003/sig0000019d }),
    .CARRYOUT({\NLW_blk00000003/blk00000038_CARRYOUT<3>_UNCONNECTED , \NLW_blk00000003/blk00000038_CARRYOUT<2>_UNCONNECTED , 
\NLW_blk00000003/blk00000038_CARRYOUT<1>_UNCONNECTED , \NLW_blk00000003/blk00000038_CARRYOUT<0>_UNCONNECTED })
  );
  DSP48E #(
    .ACASCREG ( 1 ),
    .ALUMODEREG ( 1 ),
    .AREG ( 1 ),
    .AUTORESET_PATTERN_DETECT ( "FALSE" ),
    .AUTORESET_PATTERN_DETECT_OPTINV ( "MATCH" ),
    .A_INPUT ( "CASCADE" ),
    .BCASCREG ( 2 ),
    .BREG ( 2 ),
    .B_INPUT ( "DIRECT" ),
    .CARRYINREG ( 0 ),
    .CARRYINSELREG ( 0 ),
    .CREG ( 0 ),
    .PATTERN ( 48'h000000000000 ),
    .MREG ( 1 ),
    .MULTCARRYINREG ( 0 ),
    .OPMODEREG ( 0 ),
    .PREG ( 1 ),
    .SEL_MASK ( "MASK" ),
    .SEL_PATTERN ( "PATTERN" ),
    .SEL_ROUNDING_MASK ( "SEL_MASK" ),
    .SIM_MODE ( "SAFE" ),
    .USE_MULT ( "MULT_S" ),
    .USE_PATTERN_DETECT ( "NO_PATDET" ),
    .USE_SIMD ( "ONE48" ),
    .MASK ( 48'h000000000000 ))
  \blk00000003/blk00000037  (
    .CARRYIN(\blk00000003/sig00000052 ),
    .CEA1(\blk00000003/sig00000052 ),
    .CEA2(\blk00000003/sig00000093 ),
    .CEB1(\blk00000003/sig00000093 ),
    .CEB2(\blk00000003/sig00000093 ),
    .CEC(\blk00000003/sig00000052 ),
    .CECTRL(\blk00000003/sig00000052 ),
    .CEP(\blk00000003/sig00000093 ),
    .CEM(\blk00000003/sig00000093 ),
    .CECARRYIN(\blk00000003/sig00000052 ),
    .CEMULTCARRYIN(\blk00000003/sig00000052 ),
    .CLK(clk),
    .RSTA(\blk00000003/sig00000052 ),
    .RSTB(\blk00000003/sig00000052 ),
    .RSTC(\blk00000003/sig00000052 ),
    .RSTCTRL(\blk00000003/sig00000052 ),
    .RSTP(\blk00000003/sig00000052 ),
    .RSTM(\blk00000003/sig00000052 ),
    .RSTALLCARRYIN(\blk00000003/sig00000052 ),
    .CEALUMODE(\blk00000003/sig00000093 ),
    .RSTALUMODE(\blk00000003/sig00000052 ),
    .PATTERNBDETECT(\NLW_blk00000003/blk00000037_PATTERNBDETECT_UNCONNECTED ),
    .PATTERNDETECT(\NLW_blk00000003/blk00000037_PATTERNDETECT_UNCONNECTED ),
    .OVERFLOW(\NLW_blk00000003/blk00000037_OVERFLOW_UNCONNECTED ),
    .UNDERFLOW(\NLW_blk00000003/blk00000037_UNDERFLOW_UNCONNECTED ),
    .CARRYCASCIN(\blk00000003/sig00000052 ),
    .CARRYCASCOUT(\NLW_blk00000003/blk00000037_CARRYCASCOUT_UNCONNECTED ),
    .MULTSIGNIN(\blk00000003/sig00000052 ),
    .MULTSIGNOUT(\NLW_blk00000003/blk00000037_MULTSIGNOUT_UNCONNECTED ),
    .A({\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 }),
    .PCIN({\blk00000003/sig00000150 , \blk00000003/sig00000151 , \blk00000003/sig00000152 , \blk00000003/sig00000153 , \blk00000003/sig00000154 , 
\blk00000003/sig00000155 , \blk00000003/sig00000156 , \blk00000003/sig00000157 , \blk00000003/sig00000158 , \blk00000003/sig00000159 , 
\blk00000003/sig0000015a , \blk00000003/sig0000015b , \blk00000003/sig0000015c , \blk00000003/sig0000015d , \blk00000003/sig0000015e , 
\blk00000003/sig0000015f , \blk00000003/sig00000160 , \blk00000003/sig00000161 , \blk00000003/sig00000162 , \blk00000003/sig00000163 , 
\blk00000003/sig00000164 , \blk00000003/sig00000165 , \blk00000003/sig00000166 , \blk00000003/sig00000167 , \blk00000003/sig00000168 , 
\blk00000003/sig00000169 , \blk00000003/sig0000016a , \blk00000003/sig0000016b , \blk00000003/sig0000016c , \blk00000003/sig0000016d , 
\blk00000003/sig0000016e , \blk00000003/sig0000016f , \blk00000003/sig00000170 , \blk00000003/sig00000171 , \blk00000003/sig00000172 , 
\blk00000003/sig00000173 , \blk00000003/sig00000174 , \blk00000003/sig00000175 , \blk00000003/sig00000176 , \blk00000003/sig00000177 , 
\blk00000003/sig00000178 , \blk00000003/sig00000179 , \blk00000003/sig0000017a , \blk00000003/sig0000017b , \blk00000003/sig0000017c , 
\blk00000003/sig0000017d , \blk00000003/sig0000017e , \blk00000003/sig0000017f }),
    .B({\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , b_1[31], b_1[30], b_1[29], b_1[28], b_1[27], b_1[26], b_1[25]
, b_1[24], b_1[23], b_1[22], b_1[21], b_1[20], b_1[19], b_1[18], b_1[17]}),
    .C({\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 }),
    .CARRYINSEL({\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 }),
    .OPMODE({\blk00000003/sig00000093 , \blk00000003/sig00000052 , \blk00000003/sig00000093 , \blk00000003/sig00000052 , \blk00000003/sig00000093 , 
\blk00000003/sig00000052 , \blk00000003/sig00000093 }),
    .BCIN({\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 }),
    .ALUMODE({\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 }),
    .PCOUT({\blk00000003/sig00000120 , \blk00000003/sig00000121 , \blk00000003/sig00000122 , \blk00000003/sig00000123 , \blk00000003/sig00000124 , 
\blk00000003/sig00000125 , \blk00000003/sig00000126 , \blk00000003/sig00000127 , \blk00000003/sig00000128 , \blk00000003/sig00000129 , 
\blk00000003/sig0000012a , \blk00000003/sig0000012b , \blk00000003/sig0000012c , \blk00000003/sig0000012d , \blk00000003/sig0000012e , 
\blk00000003/sig0000012f , \blk00000003/sig00000130 , \blk00000003/sig00000131 , \blk00000003/sig00000132 , \blk00000003/sig00000133 , 
\blk00000003/sig00000134 , \blk00000003/sig00000135 , \blk00000003/sig00000136 , \blk00000003/sig00000137 , \blk00000003/sig00000138 , 
\blk00000003/sig00000139 , \blk00000003/sig0000013a , \blk00000003/sig0000013b , \blk00000003/sig0000013c , \blk00000003/sig0000013d , 
\blk00000003/sig0000013e , \blk00000003/sig0000013f , \blk00000003/sig00000140 , \blk00000003/sig00000141 , \blk00000003/sig00000142 , 
\blk00000003/sig00000143 , \blk00000003/sig00000144 , \blk00000003/sig00000145 , \blk00000003/sig00000146 , \blk00000003/sig00000147 , 
\blk00000003/sig00000148 , \blk00000003/sig00000149 , \blk00000003/sig0000014a , \blk00000003/sig0000014b , \blk00000003/sig0000014c , 
\blk00000003/sig0000014d , \blk00000003/sig0000014e , \blk00000003/sig0000014f }),
    .P({\NLW_blk00000003/blk00000037_P<47>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<46>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_P<45>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<44>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<43>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_P<42>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<41>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<40>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_P<39>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<38>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<37>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_P<36>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<35>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<34>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_P<33>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<32>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<31>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_P<30>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<29>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<28>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_P<27>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<26>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<25>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_P<24>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<23>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<22>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_P<21>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<20>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<19>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_P<18>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<17>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<16>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_P<15>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<14>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<13>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_P<12>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<11>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<10>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_P<9>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<8>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<7>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_P<6>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<5>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<4>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_P<3>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<2>_UNCONNECTED , \NLW_blk00000003/blk00000037_P<1>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_P<0>_UNCONNECTED }),
    .BCOUT({\NLW_blk00000003/blk00000037_BCOUT<17>_UNCONNECTED , \NLW_blk00000003/blk00000037_BCOUT<16>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_BCOUT<15>_UNCONNECTED , \NLW_blk00000003/blk00000037_BCOUT<14>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_BCOUT<13>_UNCONNECTED , \NLW_blk00000003/blk00000037_BCOUT<12>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_BCOUT<11>_UNCONNECTED , \NLW_blk00000003/blk00000037_BCOUT<10>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_BCOUT<9>_UNCONNECTED , \NLW_blk00000003/blk00000037_BCOUT<8>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_BCOUT<7>_UNCONNECTED , \NLW_blk00000003/blk00000037_BCOUT<6>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_BCOUT<5>_UNCONNECTED , \NLW_blk00000003/blk00000037_BCOUT<4>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_BCOUT<3>_UNCONNECTED , \NLW_blk00000003/blk00000037_BCOUT<2>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_BCOUT<1>_UNCONNECTED , \NLW_blk00000003/blk00000037_BCOUT<0>_UNCONNECTED }),
    .ACIN({\blk00000003/sig00000180 , \blk00000003/sig00000181 , \blk00000003/sig00000182 , \blk00000003/sig00000183 , \blk00000003/sig00000184 , 
\blk00000003/sig00000185 , \blk00000003/sig00000186 , \blk00000003/sig00000187 , \blk00000003/sig00000188 , \blk00000003/sig00000189 , 
\blk00000003/sig0000018a , \blk00000003/sig0000018b , \blk00000003/sig0000018c , \blk00000003/sig0000018d , \blk00000003/sig0000018e , 
\blk00000003/sig0000018f , \blk00000003/sig00000190 , \blk00000003/sig00000191 , \blk00000003/sig00000192 , \blk00000003/sig00000193 , 
\blk00000003/sig00000194 , \blk00000003/sig00000195 , \blk00000003/sig00000196 , \blk00000003/sig00000197 , \blk00000003/sig00000198 , 
\blk00000003/sig00000199 , \blk00000003/sig0000019a , \blk00000003/sig0000019b , \blk00000003/sig0000019c , \blk00000003/sig0000019d }),
    .ACOUT({\NLW_blk00000003/blk00000037_ACOUT<29>_UNCONNECTED , \NLW_blk00000003/blk00000037_ACOUT<28>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_ACOUT<27>_UNCONNECTED , \NLW_blk00000003/blk00000037_ACOUT<26>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_ACOUT<25>_UNCONNECTED , \NLW_blk00000003/blk00000037_ACOUT<24>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_ACOUT<23>_UNCONNECTED , \NLW_blk00000003/blk00000037_ACOUT<22>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_ACOUT<21>_UNCONNECTED , \NLW_blk00000003/blk00000037_ACOUT<20>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_ACOUT<19>_UNCONNECTED , \NLW_blk00000003/blk00000037_ACOUT<18>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_ACOUT<17>_UNCONNECTED , \NLW_blk00000003/blk00000037_ACOUT<16>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_ACOUT<15>_UNCONNECTED , \NLW_blk00000003/blk00000037_ACOUT<14>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_ACOUT<13>_UNCONNECTED , \NLW_blk00000003/blk00000037_ACOUT<12>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_ACOUT<11>_UNCONNECTED , \NLW_blk00000003/blk00000037_ACOUT<10>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_ACOUT<9>_UNCONNECTED , \NLW_blk00000003/blk00000037_ACOUT<8>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_ACOUT<7>_UNCONNECTED , \NLW_blk00000003/blk00000037_ACOUT<6>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_ACOUT<5>_UNCONNECTED , \NLW_blk00000003/blk00000037_ACOUT<4>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_ACOUT<3>_UNCONNECTED , \NLW_blk00000003/blk00000037_ACOUT<2>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_ACOUT<1>_UNCONNECTED , \NLW_blk00000003/blk00000037_ACOUT<0>_UNCONNECTED }),
    .CARRYOUT({\NLW_blk00000003/blk00000037_CARRYOUT<3>_UNCONNECTED , \NLW_blk00000003/blk00000037_CARRYOUT<2>_UNCONNECTED , 
\NLW_blk00000003/blk00000037_CARRYOUT<1>_UNCONNECTED , \NLW_blk00000003/blk00000037_CARRYOUT<0>_UNCONNECTED })
  );
  DSP48E #(
    .ACASCREG ( 2 ),
    .ALUMODEREG ( 1 ),
    .AREG ( 2 ),
    .AUTORESET_PATTERN_DETECT ( "FALSE" ),
    .AUTORESET_PATTERN_DETECT_OPTINV ( "MATCH" ),
    .A_INPUT ( "DIRECT" ),
    .BCASCREG ( 2 ),
    .BREG ( 2 ),
    .B_INPUT ( "DIRECT" ),
    .CARRYINREG ( 0 ),
    .CARRYINSELREG ( 0 ),
    .CREG ( 0 ),
    .PATTERN ( 48'h000000000000 ),
    .MREG ( 1 ),
    .MULTCARRYINREG ( 0 ),
    .OPMODEREG ( 0 ),
    .PREG ( 1 ),
    .SEL_MASK ( "MASK" ),
    .SEL_PATTERN ( "PATTERN" ),
    .SEL_ROUNDING_MASK ( "SEL_MASK" ),
    .SIM_MODE ( "SAFE" ),
    .USE_MULT ( "MULT_S" ),
    .USE_PATTERN_DETECT ( "NO_PATDET" ),
    .USE_SIMD ( "ONE48" ),
    .MASK ( 48'h000000000000 ))
  \blk00000003/blk00000036  (
    .CARRYIN(\blk00000003/sig00000052 ),
    .CEA1(\blk00000003/sig00000093 ),
    .CEA2(\blk00000003/sig00000093 ),
    .CEB1(\blk00000003/sig00000093 ),
    .CEB2(\blk00000003/sig00000093 ),
    .CEC(\blk00000003/sig00000052 ),
    .CECTRL(\blk00000003/sig00000052 ),
    .CEP(\blk00000003/sig00000093 ),
    .CEM(\blk00000003/sig00000093 ),
    .CECARRYIN(\blk00000003/sig00000052 ),
    .CEMULTCARRYIN(\blk00000003/sig00000052 ),
    .CLK(clk),
    .RSTA(\blk00000003/sig00000052 ),
    .RSTB(\blk00000003/sig00000052 ),
    .RSTC(\blk00000003/sig00000052 ),
    .RSTCTRL(\blk00000003/sig00000052 ),
    .RSTP(\blk00000003/sig00000052 ),
    .RSTM(\blk00000003/sig00000052 ),
    .RSTALLCARRYIN(\blk00000003/sig00000052 ),
    .CEALUMODE(\blk00000003/sig00000093 ),
    .RSTALUMODE(\blk00000003/sig00000052 ),
    .PATTERNBDETECT(\NLW_blk00000003/blk00000036_PATTERNBDETECT_UNCONNECTED ),
    .PATTERNDETECT(\NLW_blk00000003/blk00000036_PATTERNDETECT_UNCONNECTED ),
    .OVERFLOW(\NLW_blk00000003/blk00000036_OVERFLOW_UNCONNECTED ),
    .UNDERFLOW(\NLW_blk00000003/blk00000036_UNDERFLOW_UNCONNECTED ),
    .CARRYCASCIN(\blk00000003/sig00000052 ),
    .CARRYCASCOUT(\NLW_blk00000003/blk00000036_CARRYCASCOUT_UNCONNECTED ),
    .MULTSIGNIN(\blk00000003/sig00000052 ),
    .MULTSIGNOUT(\NLW_blk00000003/blk00000036_MULTSIGNOUT_UNCONNECTED ),
    .A({\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig000000c2 , \blk00000003/sig000000c1 , \blk00000003/sig000000c0 , \blk00000003/sig000000bf , \blk00000003/sig000000be , 
\blk00000003/sig000000bd , \blk00000003/sig000000bc , \blk00000003/sig000000bb , \blk00000003/sig000000ba , \blk00000003/sig000000b9 , 
\blk00000003/sig000000b8 , \blk00000003/sig000000b7 , \blk00000003/sig000000b6 , \blk00000003/sig000000b5 , \blk00000003/sig000000b4 }),
    .PCIN({\blk00000003/sig00000120 , \blk00000003/sig00000121 , \blk00000003/sig00000122 , \blk00000003/sig00000123 , \blk00000003/sig00000124 , 
\blk00000003/sig00000125 , \blk00000003/sig00000126 , \blk00000003/sig00000127 , \blk00000003/sig00000128 , \blk00000003/sig00000129 , 
\blk00000003/sig0000012a , \blk00000003/sig0000012b , \blk00000003/sig0000012c , \blk00000003/sig0000012d , \blk00000003/sig0000012e , 
\blk00000003/sig0000012f , \blk00000003/sig00000130 , \blk00000003/sig00000131 , \blk00000003/sig00000132 , \blk00000003/sig00000133 , 
\blk00000003/sig00000134 , \blk00000003/sig00000135 , \blk00000003/sig00000136 , \blk00000003/sig00000137 , \blk00000003/sig00000138 , 
\blk00000003/sig00000139 , \blk00000003/sig0000013a , \blk00000003/sig0000013b , \blk00000003/sig0000013c , \blk00000003/sig0000013d , 
\blk00000003/sig0000013e , \blk00000003/sig0000013f , \blk00000003/sig00000140 , \blk00000003/sig00000141 , \blk00000003/sig00000142 , 
\blk00000003/sig00000143 , \blk00000003/sig00000144 , \blk00000003/sig00000145 , \blk00000003/sig00000146 , \blk00000003/sig00000147 , 
\blk00000003/sig00000148 , \blk00000003/sig00000149 , \blk00000003/sig0000014a , \blk00000003/sig0000014b , \blk00000003/sig0000014c , 
\blk00000003/sig0000014d , \blk00000003/sig0000014e , \blk00000003/sig0000014f }),
    .B({\blk00000003/sig00000052 , \blk00000003/sig000000b3 , \blk00000003/sig000000b2 , \blk00000003/sig000000b1 , \blk00000003/sig000000b0 , 
\blk00000003/sig000000af , \blk00000003/sig000000ae , \blk00000003/sig000000ad , \blk00000003/sig000000ac , \blk00000003/sig000000ab , 
\blk00000003/sig000000aa , \blk00000003/sig000000a9 , \blk00000003/sig000000a8 , \blk00000003/sig000000a7 , \blk00000003/sig000000a6 , 
\blk00000003/sig000000a5 , \blk00000003/sig000000a4 , \blk00000003/sig000000a3 }),
    .C({\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 }),
    .CARRYINSEL({\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 }),
    .OPMODE({\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000093 , \blk00000003/sig00000052 , \blk00000003/sig00000093 , 
\blk00000003/sig00000052 , \blk00000003/sig00000093 }),
    .BCIN({\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 }),
    .ALUMODE({\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 }),
    .PCOUT({\blk00000003/sig000000c3 , \blk00000003/sig000000c4 , \blk00000003/sig000000c5 , \blk00000003/sig000000c6 , \blk00000003/sig000000c7 , 
\blk00000003/sig000000c8 , \blk00000003/sig000000c9 , \blk00000003/sig000000ca , \blk00000003/sig000000cb , \blk00000003/sig000000cc , 
\blk00000003/sig000000cd , \blk00000003/sig000000ce , \blk00000003/sig000000cf , \blk00000003/sig000000d0 , \blk00000003/sig000000d1 , 
\blk00000003/sig000000d2 , \blk00000003/sig000000d3 , \blk00000003/sig000000d4 , \blk00000003/sig000000d5 , \blk00000003/sig000000d6 , 
\blk00000003/sig000000d7 , \blk00000003/sig000000d8 , \blk00000003/sig000000d9 , \blk00000003/sig000000da , \blk00000003/sig000000db , 
\blk00000003/sig000000dc , \blk00000003/sig000000dd , \blk00000003/sig000000de , \blk00000003/sig000000df , \blk00000003/sig000000e0 , 
\blk00000003/sig000000e1 , \blk00000003/sig000000e2 , \blk00000003/sig000000e3 , \blk00000003/sig000000e4 , \blk00000003/sig000000e5 , 
\blk00000003/sig000000e6 , \blk00000003/sig000000e7 , \blk00000003/sig000000e8 , \blk00000003/sig000000e9 , \blk00000003/sig000000ea , 
\blk00000003/sig000000eb , \blk00000003/sig000000ec , \blk00000003/sig000000ed , \blk00000003/sig000000ee , \blk00000003/sig000000ef , 
\blk00000003/sig000000f0 , \blk00000003/sig000000f1 , \blk00000003/sig000000f2 }),
    .P({\NLW_blk00000003/blk00000036_P<47>_UNCONNECTED , \NLW_blk00000003/blk00000036_P<46>_UNCONNECTED , 
\NLW_blk00000003/blk00000036_P<45>_UNCONNECTED , \NLW_blk00000003/blk00000036_P<44>_UNCONNECTED , \NLW_blk00000003/blk00000036_P<43>_UNCONNECTED , 
\NLW_blk00000003/blk00000036_P<42>_UNCONNECTED , \NLW_blk00000003/blk00000036_P<41>_UNCONNECTED , \NLW_blk00000003/blk00000036_P<40>_UNCONNECTED , 
\NLW_blk00000003/blk00000036_P<39>_UNCONNECTED , \NLW_blk00000003/blk00000036_P<38>_UNCONNECTED , \NLW_blk00000003/blk00000036_P<37>_UNCONNECTED , 
\NLW_blk00000003/blk00000036_P<36>_UNCONNECTED , \NLW_blk00000003/blk00000036_P<35>_UNCONNECTED , \NLW_blk00000003/blk00000036_P<34>_UNCONNECTED , 
\NLW_blk00000003/blk00000036_P<33>_UNCONNECTED , \NLW_blk00000003/blk00000036_P<32>_UNCONNECTED , \NLW_blk00000003/blk00000036_P<31>_UNCONNECTED , 
\NLW_blk00000003/blk00000036_P<30>_UNCONNECTED , \NLW_blk00000003/blk00000036_P<29>_UNCONNECTED , \NLW_blk00000003/blk00000036_P<28>_UNCONNECTED , 
\NLW_blk00000003/blk00000036_P<27>_UNCONNECTED , \NLW_blk00000003/blk00000036_P<26>_UNCONNECTED , \NLW_blk00000003/blk00000036_P<25>_UNCONNECTED , 
\NLW_blk00000003/blk00000036_P<24>_UNCONNECTED , \NLW_blk00000003/blk00000036_P<23>_UNCONNECTED , \NLW_blk00000003/blk00000036_P<22>_UNCONNECTED , 
\NLW_blk00000003/blk00000036_P<21>_UNCONNECTED , \NLW_blk00000003/blk00000036_P<20>_UNCONNECTED , \NLW_blk00000003/blk00000036_P<19>_UNCONNECTED , 
\NLW_blk00000003/blk00000036_P<18>_UNCONNECTED , \NLW_blk00000003/blk00000036_P<17>_UNCONNECTED , \NLW_blk00000003/blk00000036_P<16>_UNCONNECTED , 
\NLW_blk00000003/blk00000036_P<15>_UNCONNECTED , \blk00000003/sig000000a2 , \blk00000003/sig000000a1 , \blk00000003/sig000000a0 , 
\blk00000003/sig0000009f , \blk00000003/sig0000009e , \blk00000003/sig0000009d , \blk00000003/sig0000009c , \blk00000003/sig0000009b , 
\blk00000003/sig0000009a , \blk00000003/sig00000099 , \blk00000003/sig00000098 , \blk00000003/sig00000097 , \blk00000003/sig00000096 , 
\blk00000003/sig00000095 , \blk00000003/sig00000094 }),
    .BCOUT({\NLW_blk00000003/blk00000036_BCOUT<17>_UNCONNECTED , \NLW_blk00000003/blk00000036_BCOUT<16>_UNCONNECTED , 
\NLW_blk00000003/blk00000036_BCOUT<15>_UNCONNECTED , \NLW_blk00000003/blk00000036_BCOUT<14>_UNCONNECTED , 
\NLW_blk00000003/blk00000036_BCOUT<13>_UNCONNECTED , \NLW_blk00000003/blk00000036_BCOUT<12>_UNCONNECTED , 
\NLW_blk00000003/blk00000036_BCOUT<11>_UNCONNECTED , \NLW_blk00000003/blk00000036_BCOUT<10>_UNCONNECTED , 
\NLW_blk00000003/blk00000036_BCOUT<9>_UNCONNECTED , \NLW_blk00000003/blk00000036_BCOUT<8>_UNCONNECTED , 
\NLW_blk00000003/blk00000036_BCOUT<7>_UNCONNECTED , \NLW_blk00000003/blk00000036_BCOUT<6>_UNCONNECTED , 
\NLW_blk00000003/blk00000036_BCOUT<5>_UNCONNECTED , \NLW_blk00000003/blk00000036_BCOUT<4>_UNCONNECTED , 
\NLW_blk00000003/blk00000036_BCOUT<3>_UNCONNECTED , \NLW_blk00000003/blk00000036_BCOUT<2>_UNCONNECTED , 
\NLW_blk00000003/blk00000036_BCOUT<1>_UNCONNECTED , \NLW_blk00000003/blk00000036_BCOUT<0>_UNCONNECTED }),
    .ACIN({\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 }),
    .ACOUT({\blk00000003/sig00000102 , \blk00000003/sig00000103 , \blk00000003/sig00000104 , \blk00000003/sig00000105 , \blk00000003/sig00000106 , 
\blk00000003/sig00000107 , \blk00000003/sig00000108 , \blk00000003/sig00000109 , \blk00000003/sig0000010a , \blk00000003/sig0000010b , 
\blk00000003/sig0000010c , \blk00000003/sig0000010d , \blk00000003/sig0000010e , \blk00000003/sig0000010f , \blk00000003/sig00000110 , 
\blk00000003/sig00000111 , \blk00000003/sig00000112 , \blk00000003/sig00000113 , \blk00000003/sig00000114 , \blk00000003/sig00000115 , 
\blk00000003/sig00000116 , \blk00000003/sig00000117 , \blk00000003/sig00000118 , \blk00000003/sig00000119 , \blk00000003/sig0000011a , 
\blk00000003/sig0000011b , \blk00000003/sig0000011c , \blk00000003/sig0000011d , \blk00000003/sig0000011e , \blk00000003/sig0000011f }),
    .CARRYOUT({\NLW_blk00000003/blk00000036_CARRYOUT<3>_UNCONNECTED , \NLW_blk00000003/blk00000036_CARRYOUT<2>_UNCONNECTED , 
\NLW_blk00000003/blk00000036_CARRYOUT<1>_UNCONNECTED , \NLW_blk00000003/blk00000036_CARRYOUT<0>_UNCONNECTED })
  );
  DSP48E #(
    .ACASCREG ( 1 ),
    .ALUMODEREG ( 1 ),
    .AREG ( 1 ),
    .AUTORESET_PATTERN_DETECT ( "FALSE" ),
    .AUTORESET_PATTERN_DETECT_OPTINV ( "MATCH" ),
    .A_INPUT ( "CASCADE" ),
    .BCASCREG ( 2 ),
    .BREG ( 2 ),
    .B_INPUT ( "DIRECT" ),
    .CARRYINREG ( 0 ),
    .CARRYINSELREG ( 0 ),
    .CREG ( 0 ),
    .PATTERN ( 48'h000000000000 ),
    .MREG ( 1 ),
    .MULTCARRYINREG ( 0 ),
    .OPMODEREG ( 0 ),
    .PREG ( 1 ),
    .SEL_MASK ( "MASK" ),
    .SEL_PATTERN ( "PATTERN" ),
    .SEL_ROUNDING_MASK ( "SEL_MASK" ),
    .SIM_MODE ( "SAFE" ),
    .USE_MULT ( "MULT_S" ),
    .USE_PATTERN_DETECT ( "NO_PATDET" ),
    .USE_SIMD ( "ONE48" ),
    .MASK ( 48'h000000000000 ))
  \blk00000003/blk00000035  (
    .CARRYIN(\blk00000003/sig00000052 ),
    .CEA1(\blk00000003/sig00000052 ),
    .CEA2(\blk00000003/sig00000093 ),
    .CEB1(\blk00000003/sig00000093 ),
    .CEB2(\blk00000003/sig00000093 ),
    .CEC(\blk00000003/sig00000052 ),
    .CECTRL(\blk00000003/sig00000052 ),
    .CEP(\blk00000003/sig00000093 ),
    .CEM(\blk00000003/sig00000093 ),
    .CECARRYIN(\blk00000003/sig00000052 ),
    .CEMULTCARRYIN(\blk00000003/sig00000052 ),
    .CLK(clk),
    .RSTA(\blk00000003/sig00000052 ),
    .RSTB(\blk00000003/sig00000052 ),
    .RSTC(\blk00000003/sig00000052 ),
    .RSTCTRL(\blk00000003/sig00000052 ),
    .RSTP(\blk00000003/sig00000052 ),
    .RSTM(\blk00000003/sig00000052 ),
    .RSTALLCARRYIN(\blk00000003/sig00000052 ),
    .CEALUMODE(\blk00000003/sig00000093 ),
    .RSTALUMODE(\blk00000003/sig00000052 ),
    .PATTERNBDETECT(\NLW_blk00000003/blk00000035_PATTERNBDETECT_UNCONNECTED ),
    .PATTERNDETECT(\NLW_blk00000003/blk00000035_PATTERNDETECT_UNCONNECTED ),
    .OVERFLOW(\NLW_blk00000003/blk00000035_OVERFLOW_UNCONNECTED ),
    .UNDERFLOW(\NLW_blk00000003/blk00000035_UNDERFLOW_UNCONNECTED ),
    .CARRYCASCIN(\blk00000003/sig00000052 ),
    .CARRYCASCOUT(\NLW_blk00000003/blk00000035_CARRYCASCOUT_UNCONNECTED ),
    .MULTSIGNIN(\blk00000003/sig00000052 ),
    .MULTSIGNOUT(\NLW_blk00000003/blk00000035_MULTSIGNOUT_UNCONNECTED ),
    .A({\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 }),
    .PCIN({\blk00000003/sig000000c3 , \blk00000003/sig000000c4 , \blk00000003/sig000000c5 , \blk00000003/sig000000c6 , \blk00000003/sig000000c7 , 
\blk00000003/sig000000c8 , \blk00000003/sig000000c9 , \blk00000003/sig000000ca , \blk00000003/sig000000cb , \blk00000003/sig000000cc , 
\blk00000003/sig000000cd , \blk00000003/sig000000ce , \blk00000003/sig000000cf , \blk00000003/sig000000d0 , \blk00000003/sig000000d1 , 
\blk00000003/sig000000d2 , \blk00000003/sig000000d3 , \blk00000003/sig000000d4 , \blk00000003/sig000000d5 , \blk00000003/sig000000d6 , 
\blk00000003/sig000000d7 , \blk00000003/sig000000d8 , \blk00000003/sig000000d9 , \blk00000003/sig000000da , \blk00000003/sig000000db , 
\blk00000003/sig000000dc , \blk00000003/sig000000dd , \blk00000003/sig000000de , \blk00000003/sig000000df , \blk00000003/sig000000e0 , 
\blk00000003/sig000000e1 , \blk00000003/sig000000e2 , \blk00000003/sig000000e3 , \blk00000003/sig000000e4 , \blk00000003/sig000000e5 , 
\blk00000003/sig000000e6 , \blk00000003/sig000000e7 , \blk00000003/sig000000e8 , \blk00000003/sig000000e9 , \blk00000003/sig000000ea , 
\blk00000003/sig000000eb , \blk00000003/sig000000ec , \blk00000003/sig000000ed , \blk00000003/sig000000ee , \blk00000003/sig000000ef , 
\blk00000003/sig000000f0 , \blk00000003/sig000000f1 , \blk00000003/sig000000f2 }),
    .B({\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig000000f3 , \blk00000003/sig000000f4 , 
\blk00000003/sig000000f5 , \blk00000003/sig000000f6 , \blk00000003/sig000000f7 , \blk00000003/sig000000f8 , \blk00000003/sig000000f9 , 
\blk00000003/sig000000fa , \blk00000003/sig000000fb , \blk00000003/sig000000fc , \blk00000003/sig000000fd , \blk00000003/sig000000fe , 
\blk00000003/sig000000ff , \blk00000003/sig00000100 , \blk00000003/sig00000101 }),
    .C({\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 }),
    .CARRYINSEL({\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 }),
    .OPMODE({\blk00000003/sig00000093 , \blk00000003/sig00000052 , \blk00000003/sig00000093 , \blk00000003/sig00000052 , \blk00000003/sig00000093 , 
\blk00000003/sig00000052 , \blk00000003/sig00000093 }),
    .BCIN({\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , 
\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 }),
    .ALUMODE({\blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 , \blk00000003/sig00000052 }),
    .PCOUT({\blk00000003/sig00000002 , \blk00000003/sig00000003 , \blk00000003/sig00000004 , \blk00000003/sig00000005 , \blk00000003/sig00000006 , 
\blk00000003/sig00000007 , \blk00000003/sig00000008 , \blk00000003/sig00000009 , \blk00000003/sig0000000a , \blk00000003/sig0000000b , 
\blk00000003/sig0000000c , \blk00000003/sig0000000d , \blk00000003/sig0000000e , \blk00000003/sig0000000f , \blk00000003/sig00000010 , 
\blk00000003/sig00000011 , \blk00000003/sig00000012 , \blk00000003/sig00000013 , \blk00000003/sig00000014 , \blk00000003/sig00000015 , 
\blk00000003/sig00000016 , \blk00000003/sig00000017 , \blk00000003/sig00000018 , \blk00000003/sig00000019 , \blk00000003/sig0000001a , 
\blk00000003/sig0000001b , \blk00000003/sig0000001c , \blk00000003/sig0000001d , \blk00000003/sig0000001e , \blk00000003/sig0000001f , 
\blk00000003/sig00000020 , \blk00000003/sig00000021 , \blk00000003/sig00000022 , \blk00000003/sig00000023 , \blk00000003/sig00000024 , 
\blk00000003/sig00000025 , \blk00000003/sig00000026 , \blk00000003/sig00000027 , \blk00000003/sig00000028 , \blk00000003/sig00000029 , 
\blk00000003/sig0000002a , \blk00000003/sig0000002b , \blk00000003/sig0000002c , \blk00000003/sig0000002d , \blk00000003/sig0000002e , 
\blk00000003/sig0000002f , \blk00000003/sig00000030 , \blk00000003/sig00000031 }),
    .P({\NLW_blk00000003/blk00000035_P<47>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<46>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_P<45>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<44>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<43>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_P<42>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<41>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<40>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_P<39>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<38>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<37>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_P<36>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<35>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<34>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_P<33>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<32>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<31>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_P<30>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<29>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<28>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_P<27>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<26>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<25>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_P<24>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<23>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<22>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_P<21>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<20>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<19>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_P<18>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<17>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<16>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_P<15>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<14>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<13>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_P<12>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<11>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<10>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_P<9>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<8>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<7>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_P<6>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<5>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<4>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_P<3>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<2>_UNCONNECTED , \NLW_blk00000003/blk00000035_P<1>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_P<0>_UNCONNECTED }),
    .BCOUT({\NLW_blk00000003/blk00000035_BCOUT<17>_UNCONNECTED , \NLW_blk00000003/blk00000035_BCOUT<16>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_BCOUT<15>_UNCONNECTED , \NLW_blk00000003/blk00000035_BCOUT<14>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_BCOUT<13>_UNCONNECTED , \NLW_blk00000003/blk00000035_BCOUT<12>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_BCOUT<11>_UNCONNECTED , \NLW_blk00000003/blk00000035_BCOUT<10>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_BCOUT<9>_UNCONNECTED , \NLW_blk00000003/blk00000035_BCOUT<8>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_BCOUT<7>_UNCONNECTED , \NLW_blk00000003/blk00000035_BCOUT<6>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_BCOUT<5>_UNCONNECTED , \NLW_blk00000003/blk00000035_BCOUT<4>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_BCOUT<3>_UNCONNECTED , \NLW_blk00000003/blk00000035_BCOUT<2>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_BCOUT<1>_UNCONNECTED , \NLW_blk00000003/blk00000035_BCOUT<0>_UNCONNECTED }),
    .ACIN({\blk00000003/sig00000102 , \blk00000003/sig00000103 , \blk00000003/sig00000104 , \blk00000003/sig00000105 , \blk00000003/sig00000106 , 
\blk00000003/sig00000107 , \blk00000003/sig00000108 , \blk00000003/sig00000109 , \blk00000003/sig0000010a , \blk00000003/sig0000010b , 
\blk00000003/sig0000010c , \blk00000003/sig0000010d , \blk00000003/sig0000010e , \blk00000003/sig0000010f , \blk00000003/sig00000110 , 
\blk00000003/sig00000111 , \blk00000003/sig00000112 , \blk00000003/sig00000113 , \blk00000003/sig00000114 , \blk00000003/sig00000115 , 
\blk00000003/sig00000116 , \blk00000003/sig00000117 , \blk00000003/sig00000118 , \blk00000003/sig00000119 , \blk00000003/sig0000011a , 
\blk00000003/sig0000011b , \blk00000003/sig0000011c , \blk00000003/sig0000011d , \blk00000003/sig0000011e , \blk00000003/sig0000011f }),
    .ACOUT({\NLW_blk00000003/blk00000035_ACOUT<29>_UNCONNECTED , \NLW_blk00000003/blk00000035_ACOUT<28>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_ACOUT<27>_UNCONNECTED , \NLW_blk00000003/blk00000035_ACOUT<26>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_ACOUT<25>_UNCONNECTED , \NLW_blk00000003/blk00000035_ACOUT<24>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_ACOUT<23>_UNCONNECTED , \NLW_blk00000003/blk00000035_ACOUT<22>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_ACOUT<21>_UNCONNECTED , \NLW_blk00000003/blk00000035_ACOUT<20>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_ACOUT<19>_UNCONNECTED , \NLW_blk00000003/blk00000035_ACOUT<18>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_ACOUT<17>_UNCONNECTED , \NLW_blk00000003/blk00000035_ACOUT<16>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_ACOUT<15>_UNCONNECTED , \NLW_blk00000003/blk00000035_ACOUT<14>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_ACOUT<13>_UNCONNECTED , \NLW_blk00000003/blk00000035_ACOUT<12>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_ACOUT<11>_UNCONNECTED , \NLW_blk00000003/blk00000035_ACOUT<10>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_ACOUT<9>_UNCONNECTED , \NLW_blk00000003/blk00000035_ACOUT<8>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_ACOUT<7>_UNCONNECTED , \NLW_blk00000003/blk00000035_ACOUT<6>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_ACOUT<5>_UNCONNECTED , \NLW_blk00000003/blk00000035_ACOUT<4>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_ACOUT<3>_UNCONNECTED , \NLW_blk00000003/blk00000035_ACOUT<2>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_ACOUT<1>_UNCONNECTED , \NLW_blk00000003/blk00000035_ACOUT<0>_UNCONNECTED }),
    .CARRYOUT({\NLW_blk00000003/blk00000035_CARRYOUT<3>_UNCONNECTED , \NLW_blk00000003/blk00000035_CARRYOUT<2>_UNCONNECTED , 
\NLW_blk00000003/blk00000035_CARRYOUT<1>_UNCONNECTED , \NLW_blk00000003/blk00000035_CARRYOUT<0>_UNCONNECTED })
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000034  (
    .C(clk),
    .D(a_0[31]),
    .Q(\blk00000003/sig000000c2 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000033  (
    .C(clk),
    .D(a_0[30]),
    .Q(\blk00000003/sig000000c1 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000032  (
    .C(clk),
    .D(a_0[29]),
    .Q(\blk00000003/sig000000c0 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000031  (
    .C(clk),
    .D(a_0[28]),
    .Q(\blk00000003/sig000000bf )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000030  (
    .C(clk),
    .D(a_0[27]),
    .Q(\blk00000003/sig000000be )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000002f  (
    .C(clk),
    .D(a_0[26]),
    .Q(\blk00000003/sig000000bd )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000002e  (
    .C(clk),
    .D(a_0[25]),
    .Q(\blk00000003/sig000000bc )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000002d  (
    .C(clk),
    .D(a_0[24]),
    .Q(\blk00000003/sig000000bb )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000002c  (
    .C(clk),
    .D(a_0[23]),
    .Q(\blk00000003/sig000000ba )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000002b  (
    .C(clk),
    .D(a_0[22]),
    .Q(\blk00000003/sig000000b9 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000002a  (
    .C(clk),
    .D(a_0[21]),
    .Q(\blk00000003/sig000000b8 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000029  (
    .C(clk),
    .D(a_0[20]),
    .Q(\blk00000003/sig000000b7 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000028  (
    .C(clk),
    .D(a_0[19]),
    .Q(\blk00000003/sig000000b6 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000027  (
    .C(clk),
    .D(a_0[18]),
    .Q(\blk00000003/sig000000b5 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000026  (
    .C(clk),
    .D(a_0[17]),
    .Q(\blk00000003/sig000000b4 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000025  (
    .C(clk),
    .D(b_1[16]),
    .Q(\blk00000003/sig000000b3 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000024  (
    .C(clk),
    .D(b_1[15]),
    .Q(\blk00000003/sig000000b2 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000023  (
    .C(clk),
    .D(b_1[14]),
    .Q(\blk00000003/sig000000b1 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000022  (
    .C(clk),
    .D(b_1[13]),
    .Q(\blk00000003/sig000000b0 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000021  (
    .C(clk),
    .D(b_1[12]),
    .Q(\blk00000003/sig000000af )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000020  (
    .C(clk),
    .D(b_1[11]),
    .Q(\blk00000003/sig000000ae )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000001f  (
    .C(clk),
    .D(b_1[10]),
    .Q(\blk00000003/sig000000ad )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000001e  (
    .C(clk),
    .D(b_1[9]),
    .Q(\blk00000003/sig000000ac )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000001d  (
    .C(clk),
    .D(b_1[8]),
    .Q(\blk00000003/sig000000ab )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000001c  (
    .C(clk),
    .D(b_1[7]),
    .Q(\blk00000003/sig000000aa )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000001b  (
    .C(clk),
    .D(b_1[6]),
    .Q(\blk00000003/sig000000a9 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000001a  (
    .C(clk),
    .D(b_1[5]),
    .Q(\blk00000003/sig000000a8 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000019  (
    .C(clk),
    .D(b_1[4]),
    .Q(\blk00000003/sig000000a7 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000018  (
    .C(clk),
    .D(b_1[3]),
    .Q(\blk00000003/sig000000a6 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000017  (
    .C(clk),
    .D(b_1[2]),
    .Q(\blk00000003/sig000000a5 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000016  (
    .C(clk),
    .D(b_1[1]),
    .Q(\blk00000003/sig000000a4 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000015  (
    .C(clk),
    .D(b_1[0]),
    .Q(\blk00000003/sig000000a3 )
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000014  (
    .C(clk),
    .D(\blk00000003/sig000000a2 ),
    .Q(p_2[31])
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000013  (
    .C(clk),
    .D(\blk00000003/sig000000a1 ),
    .Q(p_2[30])
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000012  (
    .C(clk),
    .D(\blk00000003/sig000000a0 ),
    .Q(p_2[29])
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000011  (
    .C(clk),
    .D(\blk00000003/sig0000009f ),
    .Q(p_2[28])
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000010  (
    .C(clk),
    .D(\blk00000003/sig0000009e ),
    .Q(p_2[27])
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000000f  (
    .C(clk),
    .D(\blk00000003/sig0000009d ),
    .Q(p_2[26])
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000000e  (
    .C(clk),
    .D(\blk00000003/sig0000009c ),
    .Q(p_2[25])
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000000d  (
    .C(clk),
    .D(\blk00000003/sig0000009b ),
    .Q(p_2[24])
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000000c  (
    .C(clk),
    .D(\blk00000003/sig0000009a ),
    .Q(p_2[23])
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000000b  (
    .C(clk),
    .D(\blk00000003/sig00000099 ),
    .Q(p_2[22])
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk0000000a  (
    .C(clk),
    .D(\blk00000003/sig00000098 ),
    .Q(p_2[21])
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000009  (
    .C(clk),
    .D(\blk00000003/sig00000097 ),
    .Q(p_2[20])
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000008  (
    .C(clk),
    .D(\blk00000003/sig00000096 ),
    .Q(p_2[19])
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000007  (
    .C(clk),
    .D(\blk00000003/sig00000095 ),
    .Q(p_2[18])
  );
  FD #(
    .INIT ( 1'b0 ))
  \blk00000003/blk00000006  (
    .C(clk),
    .D(\blk00000003/sig00000094 ),
    .Q(p_2[17])
  );
  VCC   \blk00000003/blk00000005  (
    .P(\blk00000003/sig00000093 )
  );
  GND   \blk00000003/blk00000004  (
    .G(\blk00000003/sig00000052 )
  );

// synthesis translate_on

endmodule

// synthesis translate_off

`ifndef GLBL
`define GLBL

`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (weak1, weak0) GSR = GSR_int;
    assign (weak1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule

`endif

// synthesis translate_on
